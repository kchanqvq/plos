;; Loadable using 5-defunctionalize.lisp or later.

(load "2-lambda.plos")

(define processes (make-queue))

(define dispatch!
    (lambda () ((dequeue! processes) nil)))

(define yield
    (lambda ()
      (call/cc
       (lambda (caller)
         (enqueue! processes caller)
         (dispatch!)))))

(define spawn
    (lambda (thunk)
      (call/cc
       (lambda (caller)
         (call/cc
          (lambda (process)
            (enqueue! processes process)
            (caller process)))
         (thunk)
         (dispatch!)))))

;;; For experiements

(define dead-loop! (lambda () (dead-loop!)))
